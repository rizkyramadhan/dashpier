{"version":3,"file":"bundles/npm.expo-font.efbc84a374061810ccba.min.js","sources":["webpack:///../src/ExpoFontLoader.web.ts"],"sourcesContent":["import FontObserver from 'fontfaceobserver';\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  loadAsync(fontFamilyName: string, resource: string): Promise<void> {\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n    return new FontObserver(fontFamilyName).load();\n  },\n};\n\nfunction _createWebStyle(fontFamily: string, resource: string): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource});\n  }`;\n\n  const styleElement = document.createElement('style');\n  styleElement.type = 'text/css';\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    // @ts-ignore\n    styleElement.styleSheet.cssText = fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n"],"mappings":"AAAA","sourceRoot":""}